"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Version = exports.ErrVersionParse = void 0;
const error_1 = __importDefault(require("./error"));
const ErrVersionParse = (input) => error_1.default('VersionParse', {
    message: `expected a version specifier like "v9.8", got "${input}"`,
    input,
});
exports.ErrVersionParse = ErrVersionParse;
class Version {
    constructor(major, minor) {
        this.major = major;
        this.minor = minor;
    }
    static parse(input) {
        const match = input.match(this.VERSION_RE);
        if (!match)
            throw exports.ErrVersionParse(input);
        return new this(+match[1], +match[2]);
    }
    satisfies(required) {
        const { major, minor } = this;
        const { major: rMajor, minor: rMinor } = required;
        return rMajor == major && (major == 0
            ? rMinor == minor
            : rMinor <= minor);
    }
    get series() {
        const { major } = this;
        return major > 0 ? `${major}.x` : String(this);
    }
    toString() {
        return `v${this.major}.${this.minor}`;
    }
    equals(other) {
        return this.major === other.major && this.minor === other.minor;
    }
}
exports.Version = Version;
Version.VERSION_RE = /^v(\d+)\.(\d+)$/;
exports.default = Version;
//# sourceMappingURL=version.js.map